# -*- mode: ruby -*-
# # vi: set ft=ruby :

require 'fileutils'
require 'yaml'
require 'open-uri'

require File.join(File.dirname(__FILE__), "config.rb")
CLOUD_CONFIG_BASE = File.join(File.dirname(__FILE__), "cloud-config")

$data = YAML.load(IO.readlines(CLOUD_CONFIG_BASE)[1..-1].join)
if 1 && ARGV[0].eql?('up')
    puts 'Getting new etcd token...'
    $data['coreos']['etcd']['discovery'] = open('https://discovery.etcd.io/new').read
end


# Start Vagrantfile
Vagrant.require_version ">= 1.6.0"

Vagrant.configure("2") do |config|
    config.vm.box = "coreos-%s" % $update_channel
    config.vm.box_version = ">= 308.0.1"
    config.vm.box_url = "http://%s.release.core-os.net/amd64-usr/current/coreos_production_vagrant.json" % $update_channel

    config.vm.provider :virtualbox do |v|
        v.check_guest_additions = false
        v.functional_vboxsf     = false

        v.gui = $vb_gui
        v.memory = $vm_memory
        v.cpus = $vm_cpus
    end

    # plugin conflict
    if Vagrant.has_plugin?("vagrant-vbguest") then
        config.vbguest.auto_update = false
    end

    INSTANCES.each do |(role, nodes)|
        nodes.each do |(name, ip)|
            config.vm.define vm_name = "#{role}-#{name}" do |config|
                config.vm.hostname = vm_name
                config.vm.network :private_network, ip: ip

                # Uncomment below to enable NFS for sharing the host machine into the coreos-vagrant VM.
                config.vm.synced_folder "../", "/home/core/share", id: "core", :nfs => true, :mount_options => ['nolock,vers=3,udp']

                if ARGV[0].eql?('up')
                    $data['coreos']['fleet']['metadata'] = "role=#{role},name=#{name}"
                    yaml = YAML.dump($data)
                    cloud_config = File.join(File.dirname(__FILE__), ".vagrant/#{vm_name}-cloud-config")
                    File.open(cloud_config, 'w') { |file| file.write("#cloud-config\n\n#{yaml}") }

                    if File.exist?(cloud_config)
                        config.vm.provision :file, :source => "#{cloud_config}", :destination => "/tmp/vagrantfile-user-data"
                        config.vm.provision :shell, :inline => "mv /tmp/vagrantfile-user-data /var/lib/coreos-vagrant/", :privileged => true
                    end
                end

            end
        end
    end
end